name: Node.js CI

on:
  push:
    paths:
      - FrontEnd/**
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    working-directory: FrontEnd

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: FrontEnd/package-lock.json
    - run: npm ci
    - run: npm run build 
        
  dockerize:
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v3
     - name: Dockerizing
       run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fron_end:latest .
     -
       name: Login to DockerHub
       run: |
          docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }}
     -
       name: Push Docker
       run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/fron_end:latest
  
  e2e:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: FrontEnd
      strategy:
        matrix:
          node-version: [16.x]
      steps:

      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm i
      - run: yarn add --dev cypress
      - run: npx cypress run
    
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [dockerize]
    steps:
    - name: Checkout master 
      uses: actions/checkout@v2
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 tempus-reality
    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f ${{ github.workspace }}/Kubernetes/front-end/
    - name: Update image of pods
      run: kubectl rollout restart deployment/front-end
    - name: Verify deployments
      run: kubectl rollout status deployment/front-end
